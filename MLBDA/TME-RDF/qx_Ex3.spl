base <http://example.org>
prefix foaf: <http://xmlns.com/foaf/0.1/> 
prefix rel: <http://www.perceive.net/schemas/relationship/> 
prefix : <http://example.org/> 
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
prefix univ: <http://www.faculty.ac> 

#3
#SELECT distinct ?v
#WHERE {{?a :livesIn ?v} UNION {?a :locatedAt ?v} UNION {?v a :City}}

#4
#SELECT distinct ?p
#WHERE {?p :studiedAt ?u . {{?p :hasMother ?m . ?m :studiedAt ?u} UNION {?p :hasFather ?f . ?f :studiedAt ?u}}}

#5
#SELECT distinct ?p
#WHERE {?p :studiedAt ?u . {?p :hasMother ?m . ?m :studiedAt ?u} . {?p :hasFather ?f . ?f :studiedAt ?u}}

#6
#SELECT distinct ?p
#WHERE {?p :studiedAt ?u . {?p :hasMother ?m . ?m :studiedAt ?u2} UNION {?p :hasFather ?f . ?f :studiedAt ?u3} FILTER (?u != ?u2 && ?u != ?u3)}

#7
#SELECT ?p ?u
#WHERE {?p :studiedAt ?u . {{?p :hasBrother ?b} UNION {?p :hasSister ?s}}}

#8
#SELECT ?p
#WHERE {?p :studiedAt ?u . ?u :locatedAt ?v1 . ?p :livesIn $v2 FILTER (?v1 != ?v2)}

#9
SELECT distinct ?p3
WHERE {?p1 :friend ?p2 . ?p2 :friend ?p3 MINUS {?p1 :friend ?p3} FILTER (?p3 != ?p1)}
